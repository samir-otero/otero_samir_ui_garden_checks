name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check Prettier formatting
      run: npm run format:check

    - name: Run ESLint
      run: npm run lint

    - name: Run tests
      run: npm test -- --coverage --watchAll=false

    - name: Build application
      run: npm run build

    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage-${{ github.run_number }}-${{ github.run_attempt }}
        path: coverage/


  docker-build:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t otero_samir_coding_assignment13 .

    - name: Test Docker container
      run: |
        docker run -d -p 8018:80 --name test-container otero_samir_coding_assignment13
        sleep 10
        curl -f http://localhost:8018 || exit 1
        docker stop test-container
        docker rm test-container